from typing import Optional, Protocol, Tuple

from pydantic import UUID4
from app.core.domain.models import Beer, Item, Order, Round, Stock


class Driver(Protocol):
    def get_all_stock(self) -> Stock: ...

    def put_stock(self, beer: Beer) -> Beer: ...

    def delete_stock(self, beer_id: UUID4) -> Beer | None: ...

    def create_order(self) -> Order: ...

    def get_stock_for_beer(self, beer_id: UUID4) -> Beer | None: ...

    def get_order(self, order_id: UUID4) -> Order | None: ...

    def get_all_orders(self) -> list[Order]: ...

    def close_tab(self, order_id: UUID4) -> Tuple[Order | None, Optional[str]]: ...

    def add_round_to_order(
        self, order_id: UUID4, items: list[Item]
    ) -> Tuple[Order | None, Optional[str]]: ...

    def delete_round_from_order(
        self, order_id: UUID4, round_id: UUID4
    ) -> Round | None: ...
